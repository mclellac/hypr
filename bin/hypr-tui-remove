#!/bin/bash
#
# Removes a TUI application's .desktop file and icon.

set -euo pipefail

readonly ICON_DIR="${HOME}/.local/share/applications/icons"
readonly DESKTOP_DIR="${HOME}/.local/share/applications"

#######################################
# Finds all installed TUI applications.
# Globals:
#   DESKTOP_DIR
# Arguments:
#   None
# Outputs:
#   A sorted, newline-separated list of TUI application names.
#######################################
find_tuis() {
  local -a tuis
  while IFS= read -r -d '' file; do
    if grep -q '^Exec=.*alacritty.*-e' "${file}"; then
      tuis+=("$(basename "${file%.desktop}")")
    fi
  done < <(find "${DESKTOP_DIR}" -name '*.desktop' -print0)

  if ((${#tuis[@]})); then
    IFS=$'\n'
    sorted_tuis=($(sort <<<"${tuis[*]}"))
    unset IFS
    printf "%s\n" "${sorted_tuis[@]}"
  fi
}

#######################################
# Main function to remove TUI applications.
# Globals:
#   ICON_DIR
#   DESKTOP_DIR
# Arguments:
#   $@ - (Optional) A list of TUI application names to remove.
# Outputs:
#   None
#######################################
main() {
  local -a app_names
  if [[ "$#" -eq 0 ]]; then
    local tuis
    tuis=$(find_tuis)
    if [[ -n "${tuis}" ]]; then
      local app_names_string
      app_names_string=$(echo "${tuis}" | gum choose --no-limit --header "Select TUI to remove..." --selected-prefix="âœ— ")
      while IFS= read -r line; do
        [[ -n "${line}" ]] && app_names+=("${line}")
      done <<< "${app_names_string}"
    else
      echo "No TUI applications to remove."
      exit 0
    fi
  else
    app_names=("$@")
  fi

  if [[ ${#app_names[@]} -eq 0 ]]; then
    echo "No TUI applications selected for removal."
    exit 0
  fi

  for app_name in "${app_names[@]}"; do
    rm -f "${DESKTOP_DIR}/${app_name}.desktop"
    rm -f "${ICON_DIR}/${app_name}.png"
    echo "Removed ${app_name}"
  done
}

main "$@"
